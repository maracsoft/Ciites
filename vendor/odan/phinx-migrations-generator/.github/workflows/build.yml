name: build

on: [ push, pull_request ]

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: [ '7.4', '8.0', '8.1', '8.2' ]
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: phinx_test
          MYSQL_ROOT_PASSWORD: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 33306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, pdo, pdo_mysql, intl, zip
          coverage: none

      - name: Check PHP Version
        run: php -v

      - name: Check Composer Version
        run: composer -V

      - name: Check PHP Extensions
        run: php -m

      - name: Start MySQL service
        run: sudo systemctl start mysql

      - name: Create test database
        run: mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS phinx_test;'

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies for PHP 7
        if: matrix.php-versions < '8.0'
        run: composer update --prefer-dist --no-progress

      - name: Install dependencies for PHP 8
        if: matrix.php-versions >= '8.0'
        run: composer update --prefer-dist --no-progress --ignore-platform-reqs

      - name: Run test suite
        run: composer test:all
        env:
          PHP_CS_FIXER_IGNORE_ENV: 1
